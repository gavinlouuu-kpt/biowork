volumes:
  label-studio-data:
    driver: local

services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile
    image: gavinlouuu/label-studio-custom:${IMAGE_TAG:-latest}
    container_name: label-studio-nginx
    restart: unless-stopped
    ports:
      - "8080:8085"
      - "8081:8086"
    depends_on:
      - app
    environment:
      - APP_HOST=app
      - LABEL_STUDIO_HOST=${LABEL_STUDIO_HOST:-http://localhost:8080}
    volumes:
      - label-studio-data:/label-studio/data:rw
      - ./deploy/nginx/certs:/certs:ro
    command: nginx
    networks:
      - label-studio-network

  app:
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: Dockerfile
    image: gavinlouuu/label-studio-custom:${IMAGE_TAG:-latest}
    container_name: label-studio-app
    restart: unless-stopped
    expose:
      - "8000"
    depends_on:
      - db
    environment:
      - DJANGO_DB=default
      - POSTGRE_NAME=postgres
      - POSTGRE_USER=postgres
      - POSTGRE_PASSWORD=postgres
      - POSTGRE_PORT=5432
      - POSTGRE_HOST=db
      - LABEL_STUDIO_HOST=${LABEL_STUDIO_HOST:-http://localhost:8080}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-http://localhost:8080}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE:-1}
      - CSRF_COOKIE_SECURE=${CSRF_COOKIE_SECURE:-1}
      - JSON_LOG=1
      # Cloudflare Turnstile
      - TURNSTILE_ENABLED=${TURNSTILE_ENABLED:-true}
      - TURNSTILE_SITE_KEY=${TURNSTILE_SITE_KEY:-1x00000000000000000000AA}
      - TURNSTILE_SECRET_KEY=${TURNSTILE_SECRET_KEY:-1x0000000000000000000000000000000AA}
      # Base Data Directory (inside container)
      - BASE_DATA_DIR=/label-studio/data
      
    volumes:
      - label-studio-data:/label-studio/data:rw
    command: label-studio-uwsgi
    networks:
      - label-studio-network

  db:
    image: pgautoupgrade/pgautoupgrade:13-alpine
    container_name: label-studio-db
    hostname: db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=md5
    volumes:
      - ${POSTGRES_DATA_DIR:-./postgres-data}:/var/lib/postgresql/data
      - ./deploy/pgsql/certs:/var/lib/postgresql/certs:ro
    networks:
      - label-studio-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    depends_on:
      - nginx
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    environment:
      - TUNNEL_TRANSPORT_PROTOCOL=quic
    networks:
      - label-studio-network

networks:
  label-studio-network:
    name: label-studio-network
    driver: bridge
